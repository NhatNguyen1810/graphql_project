[{"/Users/nguyennhat/Desktop/rest/graphql/client/src/App.js":"1","/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/Home.js":"2","/Users/nguyennhat/Desktop/rest/graphql/client/src/reportWebVitals.js":"3","/Users/nguyennhat/Desktop/rest/graphql/client/src/context/authContext.js":"4","/Users/nguyennhat/Desktop/rest/graphql/client/src/index.js":"5","/Users/nguyennhat/Desktop/rest/graphql/client/src/components/Nav.js":"6","/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/auth/Login.js":"7","/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/auth/Register.js":"8","/Users/nguyennhat/Desktop/rest/graphql/client/src/firebase.js":"9"},{"size":904,"mtime":1610613749180,"results":"10","hashOfConfig":"11"},{"size":1666,"mtime":1610612091116,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610444084487,"results":"13","hashOfConfig":"11"},{"size":673,"mtime":1610611672641,"results":"14","hashOfConfig":"11"},{"size":703,"mtime":1610611718160,"results":"15","hashOfConfig":"11"},{"size":2262,"mtime":1610612609106,"results":"16","hashOfConfig":"11"},{"size":1004,"mtime":1610613985248,"results":"17","hashOfConfig":"11"},{"size":1348,"mtime":1610615603919,"results":"18","hashOfConfig":"11"},{"size":700,"mtime":1610615803128,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"1dcz48o",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nguyennhat/Desktop/rest/graphql/client/src/App.js",["41","42","43","44","45"],"import logo from './logo.svg';\nimport './App.css';\n\nimport ApolloClient from 'apollo-boost'; \nimport {gql} from 'apollo-boost'; \nimport React, {useState} from 'react'; \nimport Home from './pages/Home'\nimport {ApolloProvider} from '@apollo/react-hooks'; \nimport {AuthProvider} from './context/authContext';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'; \nimport Nav from './components/Nav';\nimport Register from './pages/auth/Register';\nimport Login from './pages/auth/Login';\nconst client = new ApolloClient({\n  uri: 'http://localhost:8000/graphql'\n}); \n\n\nconst  App = () => {\n\n\n  return (\n\n    <ApolloProvider client={client}>\n      <Nav/>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/register\" component={Register}/>\n        <Route exact path=\"/login\" component={Login}/>\n      </Switch> \n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/Home.js",["46","47","48","49"],"import ApolloClient from 'apollo-boost'; \nimport {gql} from 'apollo-boost'; \nimport React, {useState, useContext} from 'react'; \nimport {useQuery, useLazyQuery} from '@apollo/react-hooks'; \nimport {AuthContext} from '../context/authContext'; \nimport {useHistory} from 'react-router-dom'; \n\nconst GET_ALL_POSTS = gql`\n    {\n        allPosts{\n            id\n            title\n            description\n        }\n    }\n`\n \n\nconst  Home = () => {\n\n  //access context\nconst {state,dispatch} = useContext(AuthContext)\n\nconst {data, loading, error} = useQuery(GET_ALL_POSTS)\n\n  const [fetchPosts, {data:posts}] = useLazyQuery(GET_ALL_POSTS);\n  const updateUsername = () => {\n    dispatch({\n      type: 'LOGGED_IN_USER', \n      payload: 'NhatNhat', \n\n    })\n  }\n\n  let history = useHistory(); \n\n\n  if(loading){\n      return <div>Loading</div>\n  }\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row p-5\"> \n        {data.allPosts.map((p) => (\n          <div className=\"col md-4\" key={p.id}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"card-title\">\n                  {p.title}\n                </div>\n                <p className=\"card-text\">{p.description}</p>\n\n                <hr/>\n                \n              </div>\n             \n            </div>\n          </div>\n        ))}\n      </div>\n      <button onClick={() => fetchPosts()} className=\"btn btn-raised\">Fetch Posts</button>\n      {JSON.stringify(posts)}\n      {JSON.stringify(state.user)}\n\n      <button onClick={() => updateUsername()} className=\"btn btn-primary\">Change Username</button>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/nguyennhat/Desktop/rest/graphql/client/src/reportWebVitals.js",[],"/Users/nguyennhat/Desktop/rest/graphql/client/src/context/authContext.js",[],["50","51"],"/Users/nguyennhat/Desktop/rest/graphql/client/src/index.js",[],"/Users/nguyennhat/Desktop/rest/graphql/client/src/components/Nav.js",[],"/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/auth/Login.js",["52"],"/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/auth/Register.js",[],"/Users/nguyennhat/Desktop/rest/graphql/client/src/firebase.js",[],{"ruleId":"53","severity":1,"message":"54","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":12},{"ruleId":"53","severity":1,"message":"57","line":5,"column":9,"nodeType":"55","messageId":"56","endLine":5,"endColumn":12},{"ruleId":"53","severity":1,"message":"58","line":6,"column":16,"nodeType":"55","messageId":"56","endLine":6,"endColumn":24},{"ruleId":"53","severity":1,"message":"59","line":9,"column":9,"nodeType":"55","messageId":"56","endLine":9,"endColumn":21},{"ruleId":"53","severity":1,"message":"60","line":10,"column":9,"nodeType":"55","messageId":"56","endLine":10,"endColumn":22},{"ruleId":"53","severity":1,"message":"61","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":20},{"ruleId":"53","severity":1,"message":"58","line":3,"column":16,"nodeType":"55","messageId":"56","endLine":3,"endColumn":24},{"ruleId":"53","severity":1,"message":"62","line":24,"column":23,"nodeType":"55","messageId":"56","endLine":24,"endColumn":28},{"ruleId":"53","severity":1,"message":"63","line":35,"column":7,"nodeType":"55","messageId":"56","endLine":35,"endColumn":14},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"53","severity":1,"message":"68","line":7,"column":21,"nodeType":"55","messageId":"56","endLine":7,"endColumn":31},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'gql' is defined but never used.","'useState' is defined but never used.","'AuthProvider' is defined but never used.","'BrowserRouter' is defined but never used.","'ApolloClient' is defined but never used.","'error' is assigned a value but never used.","'history' is assigned a value but never used.","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]