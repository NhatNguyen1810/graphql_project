[{"/Users/nguyennhat/Desktop/rest/graphql/client/src/App.js":"1","/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/Home.js":"2","/Users/nguyennhat/Desktop/rest/graphql/client/src/reportWebVitals.js":"3","/Users/nguyennhat/Desktop/rest/graphql/client/src/context/authContext.js":"4","/Users/nguyennhat/Desktop/rest/graphql/client/src/index.js":"5","/Users/nguyennhat/Desktop/rest/graphql/client/src/components/Nav.js":"6","/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/auth/Login.js":"7","/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/auth/Register.js":"8","/Users/nguyennhat/Desktop/rest/graphql/client/src/firebase.js":"9","/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/auth/CompleteRegistration.js":"10"},{"size":1142,"mtime":1610665717957,"results":"11","hashOfConfig":"12"},{"size":1666,"mtime":1610612091116,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610444084487,"results":"14","hashOfConfig":"12"},{"size":1299,"mtime":1610668699409,"results":"15","hashOfConfig":"12"},{"size":750,"mtime":1610664241952,"results":"16","hashOfConfig":"12"},{"size":2950,"mtime":1610764309080,"results":"17","hashOfConfig":"12"},{"size":3248,"mtime":1610765829962,"results":"18","hashOfConfig":"12"},{"size":1719,"mtime":1610664683614,"results":"19","hashOfConfig":"12"},{"size":700,"mtime":1610615803128,"results":"20","hashOfConfig":"12"},{"size":2811,"mtime":1610668021450,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1dcz48o",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/nguyennhat/Desktop/rest/graphql/client/src/App.js",["47","48","49","50","51","52"],"import logo from './logo.svg';\nimport './App.css';\n\nimport ApolloClient from 'apollo-boost'; \nimport {gql} from 'apollo-boost'; \nimport React, {useState} from 'react'; \nimport Home from './pages/Home'\nimport {ApolloProvider} from '@apollo/react-hooks'; \nimport {AuthProvider} from './context/authContext';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'; \nimport Nav from './components/Nav';\nimport Register from './pages/auth/Register';\nimport Login from './pages/auth/Login';\nimport { ToastContainer, toast } from 'react-toastify';\nimport CompleteRegistrationn from './pages/auth/CompleteRegistration';\nconst client = new ApolloClient({\n  uri: 'http://localhost:8000/graphql'\n}); \n\n\nconst  App = () => {\n\n\n  return (\n\n    <ApolloProvider client={client}>\n      <Nav/>\n      <ToastContainer/>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/register\" component={Register}/>\n        <Route exact path=\"/login\" component={Login}/>\n        <Route exact path=\"/complete-registration\" component={CompleteRegistrationn}/>\n      </Switch> \n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/Home.js",["53","54","55","56"],"import ApolloClient from 'apollo-boost'; \nimport {gql} from 'apollo-boost'; \nimport React, {useState, useContext} from 'react'; \nimport {useQuery, useLazyQuery} from '@apollo/react-hooks'; \nimport {AuthContext} from '../context/authContext'; \nimport {useHistory} from 'react-router-dom'; \n\nconst GET_ALL_POSTS = gql`\n    {\n        allPosts{\n            id\n            title\n            description\n        }\n    }\n`\n \n\nconst  Home = () => {\n\n  //access context\nconst {state,dispatch} = useContext(AuthContext)\n\nconst {data, loading, error} = useQuery(GET_ALL_POSTS)\n\n  const [fetchPosts, {data:posts}] = useLazyQuery(GET_ALL_POSTS);\n  const updateUsername = () => {\n    dispatch({\n      type: 'LOGGED_IN_USER', \n      payload: 'NhatNhat', \n\n    })\n  }\n\n  let history = useHistory(); \n\n\n  if(loading){\n      return <div>Loading</div>\n  }\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row p-5\"> \n        {data.allPosts.map((p) => (\n          <div className=\"col md-4\" key={p.id}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"card-title\">\n                  {p.title}\n                </div>\n                <p className=\"card-text\">{p.description}</p>\n\n                <hr/>\n                \n              </div>\n             \n            </div>\n          </div>\n        ))}\n      </div>\n      <button onClick={() => fetchPosts()} className=\"btn btn-raised\">Fetch Posts</button>\n      {JSON.stringify(posts)}\n      {JSON.stringify(state.user)}\n\n      <button onClick={() => updateUsername()} className=\"btn btn-primary\">Change Username</button>\n    </div>\n  );\n}\n\nexport default Home;\n",["57","58"],"/Users/nguyennhat/Desktop/rest/graphql/client/src/reportWebVitals.js",[],["59","60"],"/Users/nguyennhat/Desktop/rest/graphql/client/src/context/authContext.js",[],"/Users/nguyennhat/Desktop/rest/graphql/client/src/index.js",[],"/Users/nguyennhat/Desktop/rest/graphql/client/src/components/Nav.js",[],"/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/auth/Login.js",["61","62","63","64"],"import React, {useState, useContext} from 'react'; \nimport {AuthContext} from '../../context/authContext';\nimport {Link, useHistory} from 'react-router-dom';  \nimport {toast} from 'react-toastify'; \nimport {auth, googleAuthProvider} from '../../firebase'; \n\nconst Login = () => {\n\n    const {dispatch} = useContext(AuthContext);\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [loading, setLoading] = useState(false)\n    const[success, setSuccess] = useState(false); \n\n    let history = useHistory(); \n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); \n        setLoading(true)\n\n        try {\n            await auth.signInWithEmailAndPassword(email, password)\n            .then(async (result) => {\n                const {user} = result \n                const idTokenResult = await user.getIdTokenResult(); \n                dispatch({\n                    type: 'LOGGED_IN_USER', \n                    payload: {email: user.email, token: idTokenResult.token}\n                })\n            })\n\n            // send user info to our server mongodb to either update or create \n\n\n\n            history.push('/')\n        } \n        \n        catch (error) {\n            console.log('login error', error.message); \n            setLoading(false); \n        }\n\n    }\n\n    const googleLogin = () => {\n        auth.signInWithPopup(googleAuthProvider).then(async (result) => {\n            const {user} = result; \n\n            const idTokenResult = await user.getIdTokenResult(); \n\n            dispatch({\n                type: 'LOGGED_IN_USER', \n                payload: {email: user.email, token: idTokenResult.token}\n            })\n            history.push('/')\n        })\n\n       \n    }\n\n    return (\n        <div className=\"container p-5\">\n            \n                {loading ? (<h4>Loading ... </h4>) : (<h4>Login</h4>)}\n\n\n                <button onClick={googleLogin} className=\"btn btn-raised btn-danger mt-5\">Login with Google</button>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Email Address</label>\n                        <input type=\"email\" \n                                value={email}\n                                placeholder=\"Enter email\"\n                                onChange={(e) => setEmail(e.target.value)} \n                                disabled={loading}\n                                className=\"form-control\"/>\n                    \n                   \n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" \n                                value={password}\n                                placeholder=\"Password\"\n                                onChange={(e) => setPassword(e.target.value)} \n                                disabled={loading}\n                                className=\"form-control\"/>\n                    \n                   \n                    </div>\n\n                    <button disabled={loading} className=\"btn btn-raised btn-primary\">Submit</button>\n                </form>\n            \n        </div> \n    )\n}\n\nexport default Login; ","/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/auth/Register.js",[],"/Users/nguyennhat/Desktop/rest/graphql/client/src/firebase.js",[],"/Users/nguyennhat/Desktop/rest/graphql/client/src/pages/auth/CompleteRegistration.js",[],{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":12},{"ruleId":"65","severity":1,"message":"69","line":5,"column":9,"nodeType":"67","messageId":"68","endLine":5,"endColumn":12},{"ruleId":"65","severity":1,"message":"70","line":6,"column":16,"nodeType":"67","messageId":"68","endLine":6,"endColumn":24},{"ruleId":"65","severity":1,"message":"71","line":9,"column":9,"nodeType":"67","messageId":"68","endLine":9,"endColumn":21},{"ruleId":"65","severity":1,"message":"72","line":10,"column":9,"nodeType":"67","messageId":"68","endLine":10,"endColumn":22},{"ruleId":"65","severity":1,"message":"73","line":14,"column":26,"nodeType":"67","messageId":"68","endLine":14,"endColumn":31},{"ruleId":"65","severity":1,"message":"74","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":20},{"ruleId":"65","severity":1,"message":"70","line":3,"column":16,"nodeType":"67","messageId":"68","endLine":3,"endColumn":24},{"ruleId":"65","severity":1,"message":"75","line":24,"column":23,"nodeType":"67","messageId":"68","endLine":24,"endColumn":28},{"ruleId":"65","severity":1,"message":"76","line":35,"column":7,"nodeType":"67","messageId":"68","endLine":35,"endColumn":14},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"65","severity":1,"message":"83","line":3,"column":9,"nodeType":"67","messageId":"68","endLine":3,"endColumn":13},{"ruleId":"65","severity":1,"message":"73","line":4,"column":9,"nodeType":"67","messageId":"68","endLine":4,"endColumn":14},{"ruleId":"65","severity":1,"message":"84","line":14,"column":11,"nodeType":"67","messageId":"68","endLine":14,"endColumn":18},{"ruleId":"65","severity":1,"message":"85","line":14,"column":20,"nodeType":"67","messageId":"68","endLine":14,"endColumn":30},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'gql' is defined but never used.","'useState' is defined but never used.","'AuthProvider' is defined but never used.","'BrowserRouter' is defined but never used.","'toast' is defined but never used.","'ApolloClient' is defined but never used.","'error' is assigned a value but never used.","'history' is assigned a value but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],"'Link' is defined but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]